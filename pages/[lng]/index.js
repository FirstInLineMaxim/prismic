import * as prismic from "@prismicio/client";
import sm from "../../sm.json";
import { components } from "../../slices";
import { SliceZone } from "@prismicio/react";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";

export const getServerSideProps = async (context) => {
  //gets params from the index /params
  const { lng } = context.params;
  //contects to prismicClient
  const getLanguage = (lng) => {
    if (lng == "de") return "en-de";
    if (lng == "fr") return "fr-fr";
  };
  const client = prismic.createClient(sm.apiEndpoint);
  const page = await client.getByUID("homepage", "startseite", {
    lang: getLanguage(lng),
  });
  return {
    props: { page },
  };
};
const Page = ({ page }) => {
  const router = useRouter();
  const [language, setLanguage] = useState();
  const { lng } = router.query;
  const handleLanguage = (e) => {
    if (e.target.checked) {
      router.push("/de");
    } else {
      router.push("/fr");
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className="flex justify-around pt-4">
        <span>{page.type}</span>
        <div className="flex align-baseline">
          <span class="mr-3 text-sm font-medium text-gray-900 dark:text-gray-300">
            en
          </span>
          <label class="relative inline-flex items-center cursor-pointer">
            <input
              type="checkbox"
              value=""
              class="sr-only peer"
              onChange={(e) => handleLanguage(e)}
              checked={lng == "de"}
            />

            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"></div>
            <span class="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">
              de
            </span>
          </label>
        </div>
      </nav>
      <main className="container mx-auto">
        <section className="h-screen py-24">
          <SliceZone slices={page.data.slices} components={components} />
        </section>
      </main>
    </>
  );
};
export default Page;
